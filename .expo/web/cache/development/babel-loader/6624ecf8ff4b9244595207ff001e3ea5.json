{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Node.Js\\\\React Native\\\\weather\\\\app\\\\screens\\\\HomeScreen.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Report from \"../components/Report\";\nimport Header from \"../components/Header\";\nimport { Context } from \"../context/Context\";\nimport MenuScreen from \"./MenuScreen\";\nexport default function HomeScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var _useContext = useContext(Context),\n      list = _useContext.list,\n      city = _useContext.city,\n      dataFromCity = _useContext.dataFromCity,\n      listLocations = _useContext.listLocations;\n\n  useEffect(function () {\n    eff();\n  }, [city]);\n\n  var eff = function eff() {\n    return _regeneratorRuntime.async(function eff$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setRefreshing(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dataFromCity(city));\n\n          case 3:\n            listLocations();\n            setRefreshing(false);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ImageBackground, {\n    source: {\n      uri: \"http://picsum.photos/720/540?blur=100\"\n    },\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      opacity: 0.7\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: eff,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Report, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["D:/Node.Js/React Native/weather/app/screens/HomeScreen.js"],"names":["React","useState","useEffect","useContext","Report","Header","Context","MenuScreen","HomeScreen","refreshing","setRefreshing","list","city","dataFromCity","listLocations","eff","uri","height","width","opacity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,SAASC,OAAT;AACA,OAAOC,UAAP;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA,kBACCP,QAAQ,CAAC,KAAD,CADT;AAAA;AAAA,MAC5BQ,UAD4B;AAAA,MAChBC,aADgB;;AAAA,oBAEiBP,UAAU,CAACG,OAAD,CAF3B;AAAA,MAE3BK,IAF2B,eAE3BA,IAF2B;AAAA,MAErBC,IAFqB,eAErBA,IAFqB;AAAA,MAEfC,YAFe,eAEfA,YAFe;AAAA,MAEDC,aAFC,eAEDA,aAFC;;AAGnCZ,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,GAAG;AACJ,GAFQ,EAEN,CAACH,IAAD,CAFM,CAAT;;AAGA,MAAMG,GAAG,GAAG,SAANA,GAAM;AAAA;AAAA;AAAA;AAAA;AACVL,YAAAA,aAAa,CAAC,IAAD,CAAb;AADU;AAAA,6CAEJG,YAAY,CAACD,IAAD,CAFR;;AAAA;AAGVE,YAAAA,aAAa;AACbJ,YAAAA,aAAa,CAAC,KAAD,CAAb;;AAJU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ;;AAMA,SACE,oBAAC,eAAD;AACE,IAAA,MAAM,EAAE;AAAEM,MAAAA,GAAG,EAAE;AAAP,KADV;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE,MAAzB;AAAiCC,MAAAA,OAAO,EAAE;AAA1C,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,UAAD;AACE,IAAA,cAAc,EACZ,oBAAC,cAAD;AAAgB,MAAA,UAAU,EAAEV,UAA5B;AAAwC,MAAA,SAAS,EAAEM,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CALF,CADF;AAeD","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ImageBackground, ScrollView, RefreshControl } from \"react-native\";\r\nimport Report from \"../components/Report\";\r\nimport Header from \"../components/Header\";\r\nimport { Context } from \"../context/Context\";\r\nimport MenuScreen from \"./MenuScreen\";\r\n\r\nexport default function HomeScreen() {\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const { list, city, dataFromCity, listLocations } = useContext(Context);\r\n  useEffect(() => {\r\n    eff();\r\n  }, [city]);\r\n  const eff = async () => {\r\n    setRefreshing(true);\r\n    await dataFromCity(city);\r\n    listLocations();\r\n    setRefreshing(false);\r\n  };\r\n  return (\r\n    <ImageBackground\r\n      source={{ uri: \"http://picsum.photos/720/540?blur=100\" }}\r\n      style={{ height: \"100%\", width: \"100%\", opacity: 0.7 }}\r\n    >\r\n      <Header />\r\n      <ScrollView\r\n        refreshControl={\r\n          <RefreshControl refreshing={refreshing} onRefresh={eff} />\r\n        }\r\n      >\r\n        <Report />\r\n      </ScrollView>\r\n    </ImageBackground>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}