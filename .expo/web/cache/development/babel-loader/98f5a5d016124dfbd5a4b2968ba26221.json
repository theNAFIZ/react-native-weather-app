{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Node.Js\\\\React Native\\\\weather\\\\app\\\\components\\\\SelectHome.js\";\n\nimport React, { useState, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport weatherApi from \"../api/weather\";\nimport colors from \"../config/colors\";\nimport { Context } from \"../context/Context\";\n\nvar SelectHome = function SelectHome() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      home = _useState2[0],\n      _onChangeText = _useState2[1];\n\n  var _useContext = useContext(Context),\n      setHome = _useContext.setHome;\n\n  var handlePress = function handlePress() {\n    var data;\n    return _regeneratorRuntime.async(function handlePress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(weatherApi.getCity(home));\n\n          case 2:\n            data = _context.sent;\n\n            if (!(data && data.loc && data.loc.city)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"homecity\", data.loc.city));\n\n          case 6:\n            setHome(data.loc.city);\n            _context.next = 10;\n            break;\n\n          case 9:\n            console.log(\"Error! Something went wrong setting the homecity\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Enter your Homecity\"), React.createElement(TextInput, {\n    placeholder: \"Pippip\",\n    style: styles.textInput,\n    placeholderTextColor: colors.text,\n    value: home,\n    onChangeText: function onChangeText(text) {\n      return _onChangeText(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: handlePress,\n    title: \"Set\",\n    color: colors.light,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SelectHome;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: colors.dark\n  },\n  header: {\n    height: 50,\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: colors.dark,\n    backgroundColor: colors.white\n  },\n  textInput: {\n    padding: 20,\n    backgroundColor: colors.bg,\n    height: 50,\n    paddingLeft: 10,\n    width: \"100%\",\n    color: colors.white\n  }\n});","map":{"version":3,"sources":["D:/Node.Js/React Native/weather/app/components/SelectHome.js"],"names":["React","useState","useContext","AsyncStorage","weatherApi","colors","Context","SelectHome","home","onChangeText","setHome","handlePress","getCity","data","loc","city","setItem","console","log","styles","container","header","textInput","text","light","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","dark","height","fontSize","fontWeight","color","white","padding","bg","paddingLeft","width"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { StyleSheet, Text, TextInput, View, Button } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nimport weatherApi from \"../api/weather\";\r\nimport colors from \"../config/colors\";\r\nimport { Context } from \"../context/Context\";\r\n\r\nconst SelectHome = () => {\r\n  const [home, onChangeText] = useState();\r\n  const { setHome } = useContext(Context);\r\n\r\n  const handlePress = async () => {\r\n    const data = await weatherApi.getCity(home);\r\n    if (data && data.loc && data.loc.city) {\r\n      await AsyncStorage.setItem(\"homecity\", data.loc.city);\r\n      setHome(data.loc.city);\r\n    } else {\r\n      console.log(\"Error! Something went wrong setting the homecity\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Enter your Homecity</Text>\r\n      <TextInput\r\n        placeholder=\"Pippip\"\r\n        style={styles.textInput}\r\n        placeholderTextColor={colors.text}\r\n        value={home}\r\n        onChangeText={(text) => onChangeText(text)}\r\n      />\r\n      <Button onPress={handlePress} title=\"Set\" color={colors.light} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SelectHome;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: colors.dark,\r\n  },\r\n  header: {\r\n    height: 50,\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: colors.dark,\r\n    backgroundColor: colors.white,\r\n  },\r\n  textInput: {\r\n    padding: 20,\r\n    backgroundColor: colors.bg,\r\n    height: 50,\r\n    paddingLeft: 10,\r\n    width: \"100%\",\r\n    color: colors.white,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}