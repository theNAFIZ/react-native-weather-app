{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Node.Js\\\\React Native\\\\weather\\\\app\\\\components\\\\Item.js\";\n\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport colors from \"../config/colors\";\n\nvar Item = function Item(_ref) {\n  var item = _ref.item;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.icon,\n    source: {\n      uri: \"http://openweathermap.org/img/wn/\" + item.weather[0].icon + \".png\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.temp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, Math.round(item.temp - 273), \"\\xB0C\"), React.createElement(Text, {\n    style: styles.time,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, new Date(item.dt * 1000).getHours(), \":\", new Date(item.dt * 1000).getMinutes()));\n};\n\nexport default Item;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: colors.dark,\n    borderRadius: 10,\n    paddingVertical: 10,\n    margin: 10\n  },\n  icon: {\n    height: 30,\n    width: 30,\n    padding: 10\n  },\n  temp: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: colors.text,\n    paddingHorizontal: 5\n  },\n  time: {\n    fontSize: 14,\n    color: colors.text,\n    paddingHorizontal: 5\n  }\n});","map":{"version":3,"sources":["D:/Node.Js/React Native/weather/app/components/Item.js"],"names":["React","colors","Item","item","styles","container","icon","uri","weather","temp","Math","round","time","Date","dt","getHours","getMinutes","StyleSheet","create","alignItems","justifyContent","backgroundColor","dark","borderRadius","paddingVertical","margin","height","width","padding","fontSize","fontWeight","color","text","paddingHorizontal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,MAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACzB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAED,MAAM,CAACE,IADhB;AAEE,IAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,wCAAsCJ,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBF,IAAtD;AADG,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACK,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BC,IAAI,CAACC,KAAL,CAAWR,IAAI,CAACM,IAAL,GAAY,GAAvB,CAA3B,UAPF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACQ,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,IAAIC,IAAJ,CAASV,IAAI,CAACW,EAAL,GAAU,IAAnB,EAAyBC,QAAzB,EADH,OAEG,IAAIF,IAAJ,CAASV,IAAI,CAACW,EAAL,GAAU,IAAnB,EAAyBE,UAAzB,EAFH,CARF,CADF;AAeD,CAhBD;;AAkBA,eAAed,IAAf;AAEA,IAAME,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,SAAS,EAAE;AAGTc,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,eAAe,EAAEpB,MAAM,CAACqB,IALf;AAMTC,IAAAA,YAAY,EAAE,EANL;AAOTC,IAAAA,eAAe,EAAE,EAPR;AAQTC,IAAAA,MAAM,EAAE;AARC,GADoB;AAW/BnB,EAAAA,IAAI,EAAE;AACJoB,IAAAA,MAAM,EAAE,EADJ;AAEJC,IAAAA,KAAK,EAAE,EAFH;AAGJC,IAAAA,OAAO,EAAE;AAHL,GAXyB;AAgB/BnB,EAAAA,IAAI,EAAE;AACJoB,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAE,MAFR;AAGJC,IAAAA,KAAK,EAAE9B,MAAM,CAAC+B,IAHV;AAIJC,IAAAA,iBAAiB,EAAE;AAJf,GAhByB;AAsB/BrB,EAAAA,IAAI,EAAE;AACJiB,IAAAA,QAAQ,EAAE,EADN;AAEJE,IAAAA,KAAK,EAAE9B,MAAM,CAAC+B,IAFV;AAGJC,IAAAA,iBAAiB,EAAE;AAHf;AAtByB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Image, StyleSheet, Text, View } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\n\r\nconst Item = ({ item }) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image\r\n        style={styles.icon}\r\n        source={{\r\n          uri: `http://openweathermap.org/img/wn/${item.weather[0].icon}.png`,\r\n        }}\r\n      />\r\n      <Text style={styles.temp}>{Math.round(item.temp - 273)}Â°C</Text>\r\n      <Text style={styles.time}>\r\n        {new Date(item.dt * 1000).getHours()}:\r\n        {new Date(item.dt * 1000).getMinutes()}\r\n      </Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    // height: 120,\r\n    // width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: colors.dark,\r\n    borderRadius: 10,\r\n    paddingVertical: 10,\r\n    margin: 10,\r\n  },\r\n  icon: {\r\n    height: 30,\r\n    width: 30,\r\n    padding: 10,\r\n  },\r\n  temp: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    color: colors.text,\r\n    paddingHorizontal: 5,\r\n  },\r\n  time: {\r\n    fontSize: 14,\r\n    color: colors.text,\r\n    paddingHorizontal: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}