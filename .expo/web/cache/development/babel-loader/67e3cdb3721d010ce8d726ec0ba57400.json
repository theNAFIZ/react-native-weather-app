{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"D:\\\\Node.Js\\\\React Native\\\\weather\\\\app\\\\components\\\\Report.js\";\nimport React, { useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport useApi from \"../api/useApi\";\nimport api from \"../api/weather\";\nimport colors from \"../config/colors\";\nimport { Context } from \"../context/Context\";\n\nfunction Report() {\n  var _useContext = useContext(Context),\n      loading = _useContext.loading,\n      error = _useContext.error,\n      cityData = _useContext.cityData,\n      city = _useContext.city,\n      getCity = _useContext.getCity;\n\n  useEffect(function () {\n    eff(city);\n  }, [city]);\n\n  var eff = function eff(city) {\n    return _regeneratorRuntime.async(function eff$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getCity(city));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, loading ? React.createElement(ActivityIndicator, {\n    animating: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }) : React.createElement(React.Fragment, null, error && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"Error Found!!\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, loading, \"+\", error, \"+\", cityData ? \"Yes\" : \"No\"), cityData && React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, cityData.name, \", \", cityData.sys.country), React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: \"http://openweathermap.org/img/wn/\" + cityData.weather[0].icon + \".png\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.h3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, cityData.weather[0].description), React.createElement(Text, {\n    style: styles.h1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, Math.round(cityData.main.temp - 273), \"\\xB0C\"))));\n}\n\nexport default Report;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: colors.dark,\n    height: \"100%\",\n    width: \"100%\"\n  },\n  h1: {\n    fontSize: 60,\n    color: colors.text\n  },\n  h3: {\n    fontSize: 40,\n    color: colors.text\n  },\n  location: {\n    fontSize: 40,\n    color: colors.text,\n    fontWeight: \"600\"\n  },\n  image: {\n    height: 90,\n    width: 90\n  }\n});","map":{"version":3,"sources":["D:/Node.Js/React Native/weather/app/components/Report.js"],"names":["React","useEffect","useContext","useApi","api","colors","Context","Report","loading","error","cityData","city","getCity","eff","styles","container","location","name","sys","country","image","uri","weather","icon","h3","description","h1","Math","round","main","temp","StyleSheet","create","alignItems","justifyContent","backgroundColor","dark","height","width","fontSize","color","text","fontWeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from \"react\";\r\nimport { StyleSheet, View, Text, Image, ActivityIndicator } from \"react-native\";\r\nimport useApi from \"../api/useApi\";\r\nimport api from \"../api/weather\";\r\nimport colors from \"../config/colors\";\r\nimport { Context } from \"../context/Context\";\r\n\r\nfunction Report() {\r\n  const { loading, error, cityData, city, getCity } = useContext(Context);\r\n  useEffect(() => {\r\n    eff(city);\r\n  }, [city]);\r\n\r\n  const eff = async (city) => {\r\n    await getCity(city);\r\n  };\r\n  //   const { data, error, loading, request } = useApi(api.getCurrent);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <ActivityIndicator animating={loading} />\r\n      ) : (\r\n        <>\r\n          {error && <Text>Error Found!!</Text>}\r\n          <Text>\r\n            {loading}+{error}+{cityData ? \"Yes\" : \"No\"}\r\n          </Text>\r\n          {cityData && (\r\n            <View style={styles.container}>\r\n              <Text style={styles.location}>\r\n                {cityData.name}, {cityData.sys.country}\r\n              </Text>\r\n              <Image\r\n                style={styles.image}\r\n                source={{\r\n                  uri: `http://openweathermap.org/img/wn/${cityData.weather[0].icon}.png`,\r\n                }}\r\n              />\r\n              <Text style={styles.h3}>{cityData.weather[0].description}</Text>\r\n              <Text style={styles.h1}>\r\n                {Math.round(cityData.main.temp - 273)}Â°C\r\n              </Text>\r\n            </View>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Report;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: colors.dark,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  h1: {\r\n    fontSize: 60,\r\n    color: colors.text,\r\n  },\r\n  h3: {\r\n    fontSize: 40,\r\n    color: colors.text,\r\n  },\r\n  location: {\r\n    fontSize: 40,\r\n    color: colors.text,\r\n    fontWeight: \"600\",\r\n  },\r\n  image: {\r\n    height: 90,\r\n    width: 90,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}