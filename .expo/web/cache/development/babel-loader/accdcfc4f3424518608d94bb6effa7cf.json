{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Node.Js\\\\React Native\\\\weather\\\\app\\\\components\\\\Item.js\";\n\nimport React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport dayjs from \"dayjs\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport colors from \"../config/colors\";\nimport { dateFormatter, iconFormatter } from \"../utils\";\n\nvar Item = function Item(_ref) {\n  var weather = _ref.weather,\n      temp = _ref.temp,\n      time = _ref.time,\n      timezone = _ref.timezone,\n      type = _ref.type;\n  var width = Dimensions.get(\"window\").width - 40;\n  var height = Dimensions.get(\"window\").height;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, type == \"hourly\" ? React.createElement(View, {\n    style: [styles.container, {\n      width: width / 4\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: iconFormatter(weather),\n    size: 25,\n    color: colors.white,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.temp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, Math.round(temp - 273), \"\\xB0C\"), React.createElement(Text, {\n    style: styles.time,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, dayjs(dateFormatter(time, timezone)).format(\"hh:mm A\"))) : React.createElement(View, {\n    style: [styles.container, {\n      flexDirection: \"row\",\n      maxHeight: height / 7\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      width: width / 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: iconFormatter(weather),\n    size: 30,\n    color: colors.white,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.temp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, weather.main)), React.createElement(View, {\n    style: {\n      alignItems: \"baseline\",\n      flexDirection: \"column\",\n      width: width / 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.temp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Min: \", Math.round(temp.min - 273), \"\\xB0C\"), React.createElement(Text, {\n    style: styles.temp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Max: \", Math.round(temp.max - 273), \"\\xB0C\")), React.createElement(Text, {\n    style: [styles.time, {\n      fontSize: 16,\n      fontWeight: \"500\",\n      width: width / 3\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, dayjs(dateFormatter(time, timezone)).format(\"dddd\"), \"\\n\", dayjs(dateFormatter(time, timezone)).format(\"DD MMM\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n    backgroundColor: colors.bg,\n    borderRadius: 10,\n    margin: 5,\n    paddingVertical: 5\n  },\n  icon: {\n    height: 30,\n    width: 30,\n    padding: 10\n  },\n  temp: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: colors.text,\n    paddingHorizontal: 5\n  },\n  time: {\n    fontSize: 12,\n    color: colors.text,\n    fontWeight: \"400\",\n    paddingHorizontal: 5\n  }\n});\nexport default Item;","map":{"version":3,"sources":["D:/Node.Js/React Native/weather/app/components/Item.js"],"names":["React","dayjs","MaterialCommunityIcons","colors","dateFormatter","iconFormatter","Item","weather","temp","time","timezone","type","width","Dimensions","get","height","styles","container","white","Math","round","format","flexDirection","maxHeight","alignItems","main","min","max","fontSize","fontWeight","StyleSheet","create","justifyContent","backgroundColor","bg","borderRadius","margin","paddingVertical","icon","padding","color","text","paddingHorizontal"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Dimensions, StyleSheet, Text, View } from \"react-native\";\r\nimport dayjs from \"dayjs\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nimport colors from \"../config/colors\";\r\nimport { dateFormatter, iconFormatter } from \"../utils\";\r\nconst Item = ({ weather, temp, time, timezone, type }) => {\r\n  const width = Dimensions.get(\"window\").width - 40;\r\n  const height = Dimensions.get(\"window\").height;\r\n  return (\r\n    <View>\r\n      {type == \"hourly\" ? (\r\n        <View style={[styles.container, { width: width / 4 }]}>\r\n          <MaterialCommunityIcons\r\n            name={iconFormatter(weather)}\r\n            size={25}\r\n            color={colors.white}\r\n          />\r\n          <Text style={styles.temp}>{Math.round(temp - 273)}Â°C</Text>\r\n          <Text style={styles.time}>\r\n            {dayjs(dateFormatter(time, timezone)).format(\"hh:mm A\")}\r\n          </Text>\r\n        </View>\r\n      ) : (\r\n        <View\r\n          style={[\r\n            styles.container,\r\n            { flexDirection: \"row\", maxHeight: height / 7 },\r\n          ]}\r\n        >\r\n          <View\r\n            style={{\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              width: width / 3,\r\n            }}\r\n          >\r\n            <MaterialCommunityIcons\r\n              name={iconFormatter(weather)}\r\n              size={30}\r\n              color={colors.white}\r\n            />\r\n            <Text style={styles.temp}>{weather.main}</Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              alignItems: \"baseline\",\r\n              flexDirection: \"column\",\r\n              width: width / 3,\r\n            }}\r\n          >\r\n            <Text style={styles.temp}>Min: {Math.round(temp.min - 273)}Â°C</Text>\r\n            <Text style={styles.temp}>Max: {Math.round(temp.max - 273)}Â°C</Text>\r\n          </View>\r\n          <Text\r\n            style={[\r\n              styles.time,\r\n              { fontSize: 16, fontWeight: \"500\", width: width / 3 },\r\n            ]}\r\n          >\r\n            {dayjs(dateFormatter(time, timezone)).format(\"dddd\")}\r\n            {\"\\n\"}\r\n            {dayjs(dateFormatter(time, timezone)).format(\"DD MMM\")}\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n    backgroundColor: colors.bg,\r\n    borderRadius: 10,\r\n    margin: 5,\r\n    paddingVertical: 5,\r\n  },\r\n  icon: {\r\n    height: 30,\r\n    width: 30,\r\n    padding: 10,\r\n  },\r\n  temp: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    color: colors.text,\r\n    paddingHorizontal: 5,\r\n  },\r\n  time: {\r\n    fontSize: 12,\r\n    color: colors.text,\r\n    fontWeight: \"400\",\r\n    paddingHorizontal: 5,\r\n  },\r\n});\r\nexport default Item;\r\n"]},"metadata":{},"sourceType":"module"}