{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node.Js\\\\React Native\\\\weather\\\\app\\\\components\\\\Report.js\";\nimport React, { useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport dayjs from \"dayjs\";\nimport colors from \"../config/colors\";\nimport { dateFormatter, iconFormatter } from \"../utils\";\nimport { Context } from \"../context/Context\";\nimport Item from \"./Item\";\nimport Wind from \"./Wind\";\nvar height = Dimensions.get(\"window\").height;\nvar width = Dimensions.get(\"window\").width;\n\nfunction Report(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(Context),\n      active = _useContext.active,\n      loading = _useContext.loading,\n      error = _useContext.error,\n      weatherData = _useContext.weatherData,\n      errors = _useContext.errors;\n\n  var _ref2 = weatherData[active] ? weatherData[active] : {\n    data: undefined,\n    loc: undefined\n  },\n      data = _ref2.data,\n      loc = _ref2.loc;\n\n  var theme = require(\"../assets/day-bg.jpg\");\n\n  if (data) {\n    theme = data.current.weather[0].icon[2] == \"n\" ? require(\"../assets/night-bg.jpg\") : require(\"../assets/day-bg.jpg\");\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: theme,\n    blurRadius: 4,\n    style: {\n      flex: 1,\n      height: height,\n      width: width\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, loading ? React.createElement(ActivityIndicator, {\n    animating: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }) : React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.menu,\n    onPress: function onPress() {\n      navigation.navigate(\"Menu\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"menu\",\n    size: 35,\n    color: colors.dark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  })), error && errors.forEach(function (er) {\n    return React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 46\n      }\n    }, er);\n  }), data && React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, loc.city, \", \", loc.country), React.createElement(Text, {\n    style: styles.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, dayjs(dateFormatter(data.current.dt, data.timezone_offset)).format(\"ddd, DD MMM 'YY\")), React.createElement(View, {\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: iconFormatter(data.current.weather[0]),\n    size: 50,\n    color: colors.white,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  })), React.createElement(Text, {\n    style: styles.h3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, data.current.weather[0].main), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      width: width,\n      backgroundColor: \"rgba(220, 220, 220, 0.3)\",\n      paddingHorizontal: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, \"Min: \\n\", Math.round(data.current.tempMin - 273), \"\\xB0C\"), React.createElement(Text, {\n    style: styles.h1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, Math.round(data.current.tempC - 273), \"\\xB0C\"), React.createElement(Text, {\n    style: styles.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, \"Max: \\n\", Math.round(data.current.tempMax - 273), \"\\xB0C\")), React.createElement(Text, {\n    style: styles.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Feels Like : \", Math.round(data.current.feel - 273), \"\\xB0C\"), React.createElement(View, {\n    style: styles.times,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, \"Sunrise \", \" \\n\", dayjs(dateFormatter(data.current.sunrise, data.timezone_offset)).format(\"hh:mm A\")), React.createElement(Text, {\n    style: styles.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, \"Sunset\", \" \\n\", dayjs(dateFormatter(data.current.sunset, data.timezone_offset)).format(\"hh:mm A\"))), React.createElement(Wind, {\n    deg: data.current.wind_deg,\n    speed: data.current.wind_speed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }), React.createElement(FlatList, {\n    horizontal: true,\n    data: data.hourly.slice(0, 4),\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(Item, {\n        weather: item.weather[0],\n        temp: item.temp,\n        time: item.dt,\n        timezone: data.timezone_offset,\n        type: \"hourly\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return item + index;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })))));\n}\n\nexport default Report;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    height: height,\n    width: width\n  },\n  h1: {\n    fontSize: 40,\n    color: colors.text\n  },\n  h3: {\n    fontSize: 30,\n    color: colors.text\n  },\n  h4: {\n    fontSize: 20,\n    color: colors.text\n  },\n  location: {\n    fontSize: 26,\n    color: colors.text,\n    fontWeight: \"600\"\n  },\n  image: {\n    height: 80,\n    width: 80,\n    padding: 10,\n    borderRadius: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"rgba(10, 10, 10, 0.3)\"\n  },\n  times: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"80%\"\n  },\n  menu: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: 12,\n    zIndex: 100000,\n    left: 0,\n    top: 0,\n    position: \"absolute\"\n  }\n});","map":{"version":3,"sources":["D:/Node.Js/React Native/weather/app/components/Report.js"],"names":["React","useContext","MaterialCommunityIcons","dayjs","colors","dateFormatter","iconFormatter","Context","Item","Wind","height","Dimensions","get","width","Report","navigation","active","loading","error","weatherData","errors","data","undefined","loc","theme","require","current","weather","icon","flex","styles","container","menu","navigate","dark","forEach","er","location","city","country","h4","dt","timezone_offset","format","image","white","h3","main","flexDirection","justifyContent","backgroundColor","paddingHorizontal","Math","round","tempMin","h1","tempC","tempMax","feel","times","sunrise","sunset","wind_deg","wind_speed","hourly","slice","item","temp","index","StyleSheet","create","alignItems","textAlign","fontSize","color","text","fontWeight","padding","borderRadius","margin","zIndex","left","top","position"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  Image,\r\n  ImageBackground,\r\n  ActivityIndicator,\r\n  FlatList,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport colors from \"../config/colors\";\r\nimport { dateFormatter, iconFormatter } from \"../utils\";\r\nimport { Context } from \"../context/Context\";\r\nimport Item from \"./Item\";\r\nimport Wind from \"./Wind\";\r\n\r\nconst height = Dimensions.get(\"window\").height;\r\nconst width = Dimensions.get(\"window\").width;\r\n\r\nfunction Report({ navigation }) {\r\n  const { active, loading, error, weatherData, errors } = useContext(Context);\r\n  const { data, loc } = weatherData[active]\r\n    ? weatherData[active]\r\n    : { data: undefined, loc: undefined };\r\n\r\n  var theme = require(\"../assets/day-bg.jpg\");\r\n  if (data) {\r\n    theme =\r\n      data.current.weather[0].icon[2] == \"n\"\r\n        ? require(\"../assets/night-bg.jpg\")\r\n        : require(`../assets/day-bg.jpg`);\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <ImageBackground\r\n        source={theme}\r\n        blurRadius={4}\r\n        style={{ flex: 1, height: height, width: width }}\r\n      >\r\n        {loading ? (\r\n          <ActivityIndicator animating={loading} />\r\n        ) : (\r\n          <View style={styles.container}>\r\n            <TouchableOpacity\r\n              style={styles.menu}\r\n              onPress={() => {\r\n                navigation.navigate(\"Menu\");\r\n              }}\r\n            >\r\n              <MaterialCommunityIcons\r\n                name=\"menu\"\r\n                size={35}\r\n                color={colors.dark}\r\n              />\r\n            </TouchableOpacity>\r\n            {error && errors.forEach((er) => <Text>{er}</Text>)}\r\n\r\n            {data && (\r\n              <View style={styles.container}>\r\n                <Text style={styles.location}>\r\n                  {loc.city}, {loc.country}\r\n                </Text>\r\n                <Text style={styles.h4}>\r\n                  {dayjs(\r\n                    dateFormatter(data.current.dt, data.timezone_offset)\r\n                  ).format(\"ddd, DD MMM 'YY\")}\r\n                </Text>\r\n\r\n                <View style={styles.image}>\r\n                  <MaterialCommunityIcons\r\n                    name={iconFormatter(data.current.weather[0])}\r\n                    size={50}\r\n                    color={colors.white}\r\n                  />\r\n                </View>\r\n                <Text style={styles.h3}>{data.current.weather[0].main}</Text>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-around\",\r\n                    width: width,\r\n                    backgroundColor: \"rgba(220, 220, 220, 0.3)\",\r\n                    paddingHorizontal: 5,\r\n                  }}\r\n                >\r\n                  <Text style={styles.h4}>\r\n                    {\"Min: \\n\"}\r\n                    {Math.round(data.current.tempMin - 273)}°C\r\n                  </Text>\r\n                  <Text style={styles.h1}>\r\n                    {Math.round(data.current.tempC - 273)}°C\r\n                  </Text>\r\n                  <Text style={styles.h4}>\r\n                    {\"Max: \\n\"}\r\n                    {Math.round(data.current.tempMax - 273)}°C\r\n                  </Text>\r\n                </View>\r\n                <Text style={styles.h4}>\r\n                  Feels Like : {Math.round(data.current.feel - 273)}°C\r\n                </Text>\r\n                <View style={styles.times}>\r\n                  <Text style={styles.h4}>\r\n                    Sunrise {\" \\n\"}\r\n                    {dayjs(\r\n                      dateFormatter(data.current.sunrise, data.timezone_offset)\r\n                    ).format(\"hh:mm A\")}\r\n                  </Text>\r\n                  <Text style={styles.h4}>\r\n                    Sunset{\" \\n\"}\r\n                    {dayjs(\r\n                      dateFormatter(data.current.sunset, data.timezone_offset)\r\n                    ).format(\"hh:mm A\")}\r\n                  </Text>\r\n                </View>\r\n                <Wind\r\n                  deg={data.current.wind_deg}\r\n                  speed={data.current.wind_speed}\r\n                />\r\n                <FlatList\r\n                  horizontal\r\n                  data={data.hourly.slice(0, 4)}\r\n                  renderItem={({ item }) => (\r\n                    <Item\r\n                      weather={item.weather[0]}\r\n                      temp={item.temp}\r\n                      time={item.dt}\r\n                      timezone={data.timezone_offset}\r\n                      type=\"hourly\"\r\n                    />\r\n                  )}\r\n                  keyExtractor={(item, index) => item + index}\r\n                />\r\n              </View>\r\n            )}\r\n          </View>\r\n        )}\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Report;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    height: height,\r\n    width: width,\r\n  },\r\n  h1: {\r\n    fontSize: 40,\r\n    color: colors.text,\r\n  },\r\n  h3: {\r\n    fontSize: 30,\r\n    color: colors.text,\r\n  },\r\n  h4: {\r\n    fontSize: 20,\r\n    color: colors.text,\r\n  },\r\n  location: {\r\n    fontSize: 26,\r\n    color: colors.text,\r\n    fontWeight: \"600\",\r\n  },\r\n  image: {\r\n    height: 80,\r\n    width: 80,\r\n    padding: 10,\r\n    borderRadius: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"rgba(10, 10, 10, 0.3)\",\r\n  },\r\n  times: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"80%\",\r\n  },\r\n  menu: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 12,\r\n    zIndex: 100000,\r\n    left: 0,\r\n    top: 0,\r\n    position: \"absolute\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}