{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Node.Js\\\\React Native\\\\weather\\\\app\\\\components\\\\Item.js\";\n\nimport React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport dayjs from \"dayjs\";\nimport colors from \"../config/colors\";\nimport { dateFormatter } from \"../utils\";\n\nvar Item = function Item(_ref) {\n  var weather = _ref.weather,\n      temp = _ref.temp,\n      time = _ref.time,\n      timezone = _ref.timezone,\n      type = _ref.type;\n  var width = Dimensions.get(\"window\").width - 40;\n  var height = Dimensions.get(\"window\").height;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, type == \"hourly\" ? React.createElement(View, {\n    style: [styles.container, {\n      maxWidth: width / 4\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.icon,\n    source: {\n      uri: \"http://openweathermap.org/img/wn/\" + weather.icon + \".png\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.temp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, Math.round(temp - 273), \"\\xB0C\"), React.createElement(Text, {\n    style: styles.time,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, dayjs(dateFormatter(time, timezone)).format(\"hh:mm A\"))) : React.createElement(View, {\n    style: [styles.container, {\n      flexDirection: \"row\",\n      maxHeight: height / 7\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: styles.icon,\n    source: {\n      uri: \"http://openweathermap.org/img/wn/\" + weather.icon + \".png\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.temp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, weather.main)), React.createElement(View, {\n    style: {\n      alignItems: \"baseline\",\n      flexDirection: \"column\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.temp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Min: \", Math.round(temp.min - 273), \"\\xB0C\"), React.createElement(Text, {\n    style: styles.temp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Max: \", Math.round(temp.max - 273), \"\\xB0C\")), React.createElement(Text, {\n    style: [styles.time, {\n      fontSize: 16,\n      fontWeight: \"500\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, dayjs(dateFormatter(time, timezone)).format(\"dddd\"), \"\\n\", dayjs(dateFormatter(time, timezone)).format(\"DD MMM\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n    backgroundColor: colors.bg,\n    borderRadius: 10,\n    margin: 5,\n    paddingVertical: 5\n  },\n  icon: {\n    height: 30,\n    width: 30,\n    padding: 10\n  },\n  temp: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: colors.text,\n    paddingHorizontal: 5\n  },\n  time: {\n    fontSize: 12,\n    color: colors.text,\n    fontWeight: \"400\",\n    paddingHorizontal: 5\n  }\n});\nexport default Item;","map":{"version":3,"sources":["D:/Node.Js/React Native/weather/app/components/Item.js"],"names":["React","dayjs","colors","dateFormatter","Item","weather","temp","time","timezone","type","width","Dimensions","get","height","styles","container","maxWidth","icon","uri","Math","round","format","flexDirection","maxHeight","alignItems","main","min","max","fontSize","fontWeight","StyleSheet","create","justifyContent","backgroundColor","bg","borderRadius","margin","paddingVertical","padding","color","text","paddingHorizontal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP;AACA,SAASC,aAAT;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA6C;AAAA,MAA1CC,OAA0C,QAA1CA,OAA0C;AAAA,MAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACxD,MAAMC,KAAK,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAAiC,EAA/C;AACA,MAAMG,MAAM,GAAGF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAxC;AACA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,IAAI,QAAR,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACK,MAAM,CAACC,SAAR,EAAmB;AAAEC,MAAAA,QAAQ,EAAEN,KAAK,GAAG;AAApB,KAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEI,MAAM,CAACG,IADhB;AAEE,IAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,wCAAsCb,OAAO,CAACY,IAA9C;AADG,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACR,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2Ba,IAAI,CAACC,KAAL,CAAWd,IAAI,GAAG,GAAlB,CAA3B,UAPF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACP,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACE,aAAa,CAACI,IAAD,EAAOC,QAAP,CAAd,CAAL,CAAqCa,MAArC,CAA4C,SAA5C,CADH,CARF,CADD,GAcC,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLP,MAAM,CAACC,SADF,EAEL;AAAEO,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,SAAS,EAAEV,MAAM,GAAG;AAA5C,KAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAES,MAAAA,aAAa,EAAE,QAAjB;AAA2BE,MAAAA,UAAU,EAAE;AAAvC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEV,MAAM,CAACG,IADhB;AAEE,IAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,wCAAsCb,OAAO,CAACY,IAA9C;AADG,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACR,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BD,OAAO,CAACoB,IAAnC,CAPF,CANF,EAeE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,UAAU,EAAE,UAAd;AAA0BF,MAAAA,aAAa,EAAE;AAAzC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACR,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgCa,IAAI,CAACC,KAAL,CAAWd,IAAI,CAACoB,GAAL,GAAW,GAAtB,CAAhC,UADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACR,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgCa,IAAI,CAACC,KAAL,CAAWd,IAAI,CAACqB,GAAL,GAAW,GAAtB,CAAhC,UAFF,CAfF,EAmBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACb,MAAM,CAACP,IAAR,EAAc;AAAEqB,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,UAAU,EAAE;AAA5B,KAAd,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG5B,KAAK,CAACE,aAAa,CAACI,IAAD,EAAOC,QAAP,CAAd,CAAL,CAAqCa,MAArC,CAA4C,MAA5C,CADH,EAEG,IAFH,EAGGpB,KAAK,CAACE,aAAa,CAACI,IAAD,EAAOC,QAAP,CAAd,CAAL,CAAqCa,MAArC,CAA4C,QAA5C,CAHH,CAnBF,CAfJ,CADF;AA4CD,CA/CD;;AAiDA,IAAMP,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC/BhB,EAAAA,SAAS,EAAE;AACTS,IAAAA,UAAU,EAAE,QADH;AAETQ,IAAAA,cAAc,EAAE,cAFP;AAGTC,IAAAA,eAAe,EAAE/B,MAAM,CAACgC,EAHf;AAITC,IAAAA,YAAY,EAAE,EAJL;AAKTC,IAAAA,MAAM,EAAE,CALC;AAMTC,IAAAA,eAAe,EAAE;AANR,GADoB;AAS/BpB,EAAAA,IAAI,EAAE;AACJJ,IAAAA,MAAM,EAAE,EADJ;AAEJH,IAAAA,KAAK,EAAE,EAFH;AAGJ4B,IAAAA,OAAO,EAAE;AAHL,GATyB;AAc/BhC,EAAAA,IAAI,EAAE;AACJsB,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAE,MAFR;AAGJU,IAAAA,KAAK,EAAErC,MAAM,CAACsC,IAHV;AAIJC,IAAAA,iBAAiB,EAAE;AAJf,GAdyB;AAoB/BlC,EAAAA,IAAI,EAAE;AACJqB,IAAAA,QAAQ,EAAE,EADN;AAEJW,IAAAA,KAAK,EAAErC,MAAM,CAACsC,IAFV;AAGJX,IAAAA,UAAU,EAAE,KAHR;AAIJY,IAAAA,iBAAiB,EAAE;AAJf;AApByB,CAAlB,CAAf;AA2BA,eAAerC,IAAf","sourcesContent":["import React from \"react\";\r\nimport { Dimensions, Image, StyleSheet, Text, View } from \"react-native\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport colors from \"../config/colors\";\r\nimport { dateFormatter } from \"../utils\";\r\nconst Item = ({ weather, temp, time, timezone, type }) => {\r\n  const width = Dimensions.get(\"window\").width - 40;\r\n  const height = Dimensions.get(\"window\").height;\r\n  return (\r\n    <View>\r\n      {type == \"hourly\" ? (\r\n        <View style={[styles.container, { maxWidth: width / 4 }]}>\r\n          <Image\r\n            style={styles.icon}\r\n            source={{\r\n              uri: `http://openweathermap.org/img/wn/${weather.icon}.png`,\r\n            }}\r\n          />\r\n          <Text style={styles.temp}>{Math.round(temp - 273)}Â°C</Text>\r\n          <Text style={styles.time}>\r\n            {dayjs(dateFormatter(time, timezone)).format(\"hh:mm A\")}\r\n          </Text>\r\n        </View>\r\n      ) : (\r\n        <View\r\n          style={[\r\n            styles.container,\r\n            { flexDirection: \"row\", maxHeight: height / 7 },\r\n          ]}\r\n        >\r\n          <View style={{ flexDirection: \"column\", alignItems: \"center\" }}>\r\n            <Image\r\n              style={styles.icon}\r\n              source={{\r\n                uri: `http://openweathermap.org/img/wn/${weather.icon}.png`,\r\n              }}\r\n            />\r\n            <Text style={styles.temp}>{weather.main}</Text>\r\n          </View>\r\n          <View style={{ alignItems: \"baseline\", flexDirection: \"column\" }}>\r\n            <Text style={styles.temp}>Min: {Math.round(temp.min - 273)}Â°C</Text>\r\n            <Text style={styles.temp}>Max: {Math.round(temp.max - 273)}Â°C</Text>\r\n          </View>\r\n          <Text style={[styles.time, { fontSize: 16, fontWeight: \"500\" }]}>\r\n            {dayjs(dateFormatter(time, timezone)).format(\"dddd\")}\r\n            {\"\\n\"}\r\n            {dayjs(dateFormatter(time, timezone)).format(\"DD MMM\")}\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n    backgroundColor: colors.bg,\r\n    borderRadius: 10,\r\n    margin: 5,\r\n    paddingVertical: 5,\r\n  },\r\n  icon: {\r\n    height: 30,\r\n    width: 30,\r\n    padding: 10,\r\n  },\r\n  temp: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    color: colors.text,\r\n    paddingHorizontal: 5,\r\n  },\r\n  time: {\r\n    fontSize: 12,\r\n    color: colors.text,\r\n    fontWeight: \"400\",\r\n    paddingHorizontal: 5,\r\n  },\r\n});\r\nexport default Item;\r\n"]},"metadata":{},"sourceType":"module"}