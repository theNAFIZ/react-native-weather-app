{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Node.Js\\\\React Native\\\\weather\\\\app\\\\components\\\\OfflineNotice.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNetInfo } from \"@react-native-community/netinfo\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport colors from \"../config/colors\";\nvar not;\n\nvar OfflineNotice = function OfflineNotice() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      setVisible(false);\n    }, 10000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  var netInfo = useNetInfo();\n\n  if (netInfo.type !== \"unknown\" && netInfo.isInternetReachable === false) {\n    not = true;\n    return React.createElement(React.Fragment, null, visible ? React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      adjustsFontSizeToFit: true,\n      color: colors.white,\n      name: \"network-strength-off-outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }), \" \", \"No internet connection\")) : React.createElement(View, {\n      style: styles.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      name: \"network-strength-off-outline\",\n      color: colors.white,\n      size: 20,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    })));\n  } else {\n    not = false;\n    return React.createElement(React.Fragment, null, visible && React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      adjustsFontSizeToFit: true,\n      color: colors.white,\n      name: \"network-strength-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }), \" \", \"You are online!\")));\n  }\n};\n\nexport default OfflineNotice;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: not ? \"red\" : \"green\",\n    width: \"100%\",\n    height: 26,\n    alignItems: \"center\"\n  },\n  text: {\n    fontSize: 14,\n    color: colors.white\n  },\n  icon: {\n    backgroundColor: not ? \"red\" : \"green\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    right: 0,\n    padding: 5\n  }\n});","map":{"version":3,"sources":["D:/Node.Js/React Native/weather/app/components/OfflineNotice.js"],"names":["React","useEffect","useState","useNetInfo","MaterialCommunityIcons","colors","not","OfflineNotice","visible","setVisible","interval","setInterval","clearInterval","netInfo","type","isInternetReachable","styles","container","text","white","icon","StyleSheet","create","backgroundColor","width","height","alignItems","fontSize","color","position","right","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { useNetInfo } from \"@react-native-community/netinfo\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport colors from \"../config/colors\";\r\n\r\nvar not;\r\n\r\nconst OfflineNotice = () => {\r\n  const [visible, setVisible] = useState(true);\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setVisible(false);\r\n    }, 10000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  const netInfo = useNetInfo();\r\n  if (netInfo.type !== \"unknown\" && netInfo.isInternetReachable === false) {\r\n    not = true;\r\n    return (\r\n      <>\r\n        {visible ? (\r\n          <View style={styles.container}>\r\n            <Text style={styles.text}>\r\n              <MaterialCommunityIcons\r\n                adjustsFontSizeToFit\r\n                color={colors.white}\r\n                name=\"network-strength-off-outline\"\r\n              />{\" \"}\r\n              No internet connection\r\n            </Text>\r\n          </View>\r\n        ) : (\r\n          <View style={styles.icon}>\r\n            <MaterialCommunityIcons\r\n              name=\"network-strength-off-outline\"\r\n              color={colors.white}\r\n              size={20}\r\n            />\r\n          </View>\r\n        )}\r\n      </>\r\n    );\r\n  } else {\r\n    not = false;\r\n    return (\r\n      <>\r\n        {visible && (\r\n          <View style={styles.container}>\r\n            <Text style={styles.text}>\r\n              <MaterialCommunityIcons\r\n                adjustsFontSizeToFit\r\n                color={colors.white}\r\n                name=\"network-strength-4\"\r\n              />{\" \"}\r\n              You are online!\r\n            </Text>\r\n          </View>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default OfflineNotice;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: not ? \"red\" : \"green\",\r\n    width: \"100%\",\r\n    height: 26,\r\n    alignItems: \"center\",\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    color: colors.white,\r\n  },\r\n  icon: {\r\n    backgroundColor: not ? \"red\" : \"green\",\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    right: 0,\r\n    padding: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}