{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node.Js\\\\React Native\\\\weather\\\\app\\\\components\\\\Report.js\";\nimport React, { useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport colors from \"../config/colors\";\nimport { Context } from \"../context/Context\";\nimport Wind from \"./Wind\";\n\nfunction Report() {\n  var _useContext = useContext(Context),\n      active = _useContext.active,\n      loading = _useContext.loading,\n      error = _useContext.error,\n      weatherData = _useContext.weatherData;\n\n  var data = weatherData[active].data;\n  var loc = weatherData[active].loc;\n  return React.createElement(React.Fragment, null, loading ? React.createElement(ActivityIndicator, {\n    animating: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }) : React.createElement(React.Fragment, null, error && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, \"No such location!\"), data && React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }, loc.city, \", \", loc.country), React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: \"http://openweathermap.org/img/wn/\" + data.current.weather[0].icon + \".png\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.h3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, data.current.weather[0].main), React.createElement(Text, {\n    style: styles.h1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, Math.round(data.current.temp - 273), \"\\xB0C\"), React.createElement(View, {\n    style: styles.times,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Sunrise \", \" \\n\", new Date(data.current.sunrise * 1000).getHours(), \":\", new Date(data.current.sunrise * 1000).getMinutes()), React.createElement(View, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Sunset\", \" \\n\", new Date(data.current.sunset * 1000).getHours(), \":\", new Date(data.current.sunset * 1000).getMinutes())), React.createElement(Wind, {\n    deg: data.wind_deg,\n    speed: data.wind_speed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, JSON.stringify(new Date(data.current.dt * 1000))))));\n}\n\nexport default Report;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\",\n    width: \"100%\"\n  },\n  h1: {\n    fontSize: 60,\n    color: colors.text\n  },\n  h3: {\n    fontSize: 40,\n    color: colors.text\n  },\n  h4: {\n    fontSize: 26,\n    color: colors.text\n  },\n  location: {\n    fontSize: 40,\n    color: colors.text,\n    fontWeight: \"600\"\n  },\n  image: {\n    height: 90,\n    width: 90\n  },\n  times: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  divider: {\n    borderWidth: 1,\n    borderColor: \"#bbb\",\n    marginRight: 20,\n    height: 80\n  }\n});","map":{"version":3,"sources":["D:/Node.Js/React Native/weather/app/components/Report.js"],"names":["React","useContext","colors","Context","Wind","Report","active","loading","error","weatherData","data","loc","styles","container","location","city","country","image","uri","current","weather","icon","h3","main","h1","Math","round","temp","times","h4","Date","sunrise","getHours","getMinutes","divider","sunset","wind_deg","wind_speed","JSON","stringify","dt","StyleSheet","create","alignItems","textAlign","justifyContent","height","width","fontSize","color","text","fontWeight","flexDirection","borderWidth","borderColor","marginRight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,OAAT;AACA,OAAOC,IAAP;;AAEA,SAASC,MAAT,GAAkB;AAAA,oBACgCJ,UAAU,CAACE,OAAD,CAD1C;AAAA,MACRG,MADQ,eACRA,MADQ;AAAA,MACAC,OADA,eACAA,OADA;AAAA,MACSC,KADT,eACSA,KADT;AAAA,MACgBC,WADhB,eACgBA,WADhB;;AAEhB,MAAMC,IAAI,GAAGD,WAAW,CAACH,MAAD,CAAX,CAAoBI,IAAjC;AACA,MAAMC,GAAG,GAAGF,WAAW,CAACH,MAAD,CAAX,CAAoBK,GAAhC;AACA,SACE,0CACGJ,OAAO,GACN,oBAAC,iBAAD;AAAmB,IAAA,SAAS,EAAEA,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,0CACGC,KAAK,IAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADZ,EAGGE,IAAI,IACH,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,GAAG,CAACI,IADP,QACeJ,GAAG,CAACK,OADnB,CADF,EAIE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEJ,MAAM,CAACK,KADhB;AAEE,IAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,wCAAsCR,IAAI,CAACS,OAAL,CAAaC,OAAb,CAAqB,CAArB,EAAwBC,IAA9D;AADG,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBZ,IAAI,CAACS,OAAL,CAAaC,OAAb,CAAqB,CAArB,EAAwBG,IAAjD,CAVF,EAWE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACY,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACC,KAAL,CAAWhB,IAAI,CAACS,OAAL,CAAaQ,IAAb,GAAoB,GAA/B,CADH,UAXF,EAcE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACgB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACiB,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACW,KADX,EAEG,IAAIC,IAAJ,CAASpB,IAAI,CAACS,OAAL,CAAaY,OAAb,GAAuB,IAAhC,EAAsCC,QAAtC,EAFH,OAGG,IAAIF,IAAJ,CAASpB,IAAI,CAACS,OAAL,CAAaY,OAAb,GAAuB,IAAhC,EAAsCE,UAAtC,EAHH,CADF,EAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACsB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtB,MAAM,CAACiB,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACS,KADT,EAEG,IAAIC,IAAJ,CAASpB,IAAI,CAACS,OAAL,CAAagB,MAAb,GAAsB,IAA/B,EAAqCH,QAArC,EAFH,OAGG,IAAIF,IAAJ,CAASpB,IAAI,CAACS,OAAL,CAAagB,MAAb,GAAsB,IAA/B,EAAqCF,UAArC,EAHH,CAPF,CAdF,EA2BE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEvB,IAAI,CAAC0B,QAAhB;AAA0B,IAAA,KAAK,EAAE1B,IAAI,CAAC2B,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,EA4BE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,IAAI,CAACC,SAAL,CAAe,IAAIT,IAAJ,CAASpB,IAAI,CAACS,OAAL,CAAaqB,EAAb,GAAkB,IAA3B,CAAf,CAAP,CA5BF,CAJJ,CAJJ,CADF;AA4CD;;AAED,eAAenC,MAAf;AAEA,IAAMO,MAAM,GAAG6B,UAAU,CAACC,MAAX,CAAkB;AAC/B7B,EAAAA,SAAS,EAAE;AACT8B,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,SAAS,EAAE,QAFF;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,MAAM,EAAE,MAJC;AAKTC,IAAAA,KAAK,EAAE;AALE,GADoB;AAS/BvB,EAAAA,EAAE,EAAE;AACFwB,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,KAAK,EAAE/C,MAAM,CAACgD;AAFZ,GAT2B;AAa/B5B,EAAAA,EAAE,EAAE;AACF0B,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,KAAK,EAAE/C,MAAM,CAACgD;AAFZ,GAb2B;AAiB/BrB,EAAAA,EAAE,EAAE;AACFmB,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,KAAK,EAAE/C,MAAM,CAACgD;AAFZ,GAjB2B;AAqB/BpC,EAAAA,QAAQ,EAAE;AACRkC,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,KAAK,EAAE/C,MAAM,CAACgD,IAFN;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GArBqB;AA0B/BlC,EAAAA,KAAK,EAAE;AACL6B,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,KAAK,EAAE;AAFF,GA1BwB;AA8B/BnB,EAAAA,KAAK,EAAE;AACLwB,IAAAA,aAAa,EAAE,KADV;AAELT,IAAAA,UAAU,EAAE;AAFP,GA9BwB;AAkC/BT,EAAAA,OAAO,EAAE;AACPmB,IAAAA,WAAW,EAAE,CADN;AAEPC,IAAAA,WAAW,EAAE,MAFN;AAGPC,IAAAA,WAAW,EAAE,EAHN;AAIPT,IAAAA,MAAM,EAAE;AAJD;AAlCsB,CAAlB,CAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { StyleSheet, View, Text, Image, ActivityIndicator } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport { Context } from \"../context/Context\";\r\nimport Wind from \"./Wind\";\r\n\r\nfunction Report() {\r\n  const { active, loading, error, weatherData } = useContext(Context);\r\n  const data = weatherData[active].data;\r\n  const loc = weatherData[active].loc;\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <ActivityIndicator animating={loading} />\r\n      ) : (\r\n        <>\r\n          {error && <Text>No such location!</Text>}\r\n\r\n          {data && (\r\n            <View style={styles.container}>\r\n              <Text style={styles.location}>\r\n                {loc.city}, {loc.country}\r\n              </Text>\r\n              <Image\r\n                style={styles.image}\r\n                source={{\r\n                  uri: `http://openweathermap.org/img/wn/${data.current.weather[0].icon}.png`,\r\n                }}\r\n              />\r\n              <Text style={styles.h3}>{data.current.weather[0].main}</Text>\r\n              <Text style={styles.h1}>\r\n                {Math.round(data.current.temp - 273)}Â°C\r\n              </Text>\r\n              <View style={styles.times}>\r\n                <Text style={styles.h4}>\r\n                  Sunrise {\" \\n\"}\r\n                  {new Date(data.current.sunrise * 1000).getHours()}:\r\n                  {new Date(data.current.sunrise * 1000).getMinutes()}\r\n                </Text>\r\n                <View style={styles.divider} />\r\n                <Text style={styles.h4}>\r\n                  Sunset{\" \\n\"}\r\n                  {new Date(data.current.sunset * 1000).getHours()}:\r\n                  {new Date(data.current.sunset * 1000).getMinutes()}\r\n                </Text>\r\n              </View>\r\n              <Wind deg={data.wind_deg} speed={data.wind_speed} />\r\n              <Text>{JSON.stringify(new Date(data.current.dt * 1000))}</Text>\r\n            </View>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Report;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n\r\n  h1: {\r\n    fontSize: 60,\r\n    color: colors.text,\r\n  },\r\n  h3: {\r\n    fontSize: 40,\r\n    color: colors.text,\r\n  },\r\n  h4: {\r\n    fontSize: 26,\r\n    color: colors.text,\r\n  },\r\n  location: {\r\n    fontSize: 40,\r\n    color: colors.text,\r\n    fontWeight: \"600\",\r\n  },\r\n  image: {\r\n    height: 90,\r\n    width: 90,\r\n  },\r\n  times: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  divider: {\r\n    borderWidth: 1,\r\n    borderColor: \"#bbb\",\r\n    marginRight: 20,\r\n    height: 80,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}