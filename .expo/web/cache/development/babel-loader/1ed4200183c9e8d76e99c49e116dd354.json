{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node.Js\\\\React Native\\\\weather\\\\app\\\\components\\\\Report.js\";\nimport React, { useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport colors from \"../config/colors\";\nimport { Context } from \"../context/Context\";\nimport Item from \"./Item\";\nimport Wind from \"./Wind\";\n\nfunction Report() {\n  var _this = this;\n\n  var _useContext = useContext(Context),\n      active = _useContext.active,\n      loading = _useContext.loading,\n      error = _useContext.error,\n      weatherData = _useContext.weatherData;\n\n  var _ref = weatherData[active] ? weatherData[active] : {\n    data: undefined,\n    loc: undefined\n  },\n      data = _ref.data,\n      loc = _ref.loc;\n\n  var theme = require(\"../assets/bg-day.jpg\");\n\n  if (data) {\n    theme = data.current.weather[0].icon[2] == \"n\" ? require(\"../assets/bg-night.jpg\") : require(\"../assets/bg-day.jpg\");\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: theme,\n    style: {\n      flex: 1,\n      height: \"100%\",\n      width: \"100%\",\n      opacity: 0.7\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, loading ? React.createElement(ActivityIndicator, {\n    animating: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, error && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }, \"No such location!\"), data && React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, loc.city, \", \", loc.country), React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: \"http://openweathermap.org/img/wn/\" + data.current.weather[0].icon + \".png\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.h3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, data.current.weather[0].main), React.createElement(Text, {\n    style: styles.h1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, Math.round(data.current.tempC - 273), \"\\xB0C\"), React.createElement(Text, {\n    style: styles.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Feels Like : \", Math.round(data.current.feel - 273), \"\\xB0C\"), React.createElement(View, {\n    style: styles.times,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }, \"Sunrise \", \" \\n\", new Date(data.current.sunrise * 1000).getHours(), \":\", new Date(data.current.sunrise * 1000).getMinutes()), React.createElement(View, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }), React.createElement(Text, {\n    style: styles.h4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, \"Sunset\", \" \\n\", new Date(data.current.sunset * 1000).getHours(), \":\", new Date(data.current.sunset * 1000).getMinutes())), React.createElement(Wind, {\n    deg: data.current.wind_deg,\n    speed: data.current.wind_speed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, JSON.stringify(new Date(data.current.dt * 1000))))), React.createElement(FlatList, {\n    horizontal: true,\n    data: data.hourly.slice(0, 4),\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Item, {\n        item: item,\n        type: \"hourly\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 37\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return item + index;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Report;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\",\n    width: \"100%\"\n  },\n  h1: {\n    fontSize: 40,\n    color: colors.text\n  },\n  h3: {\n    fontSize: 30,\n    color: colors.text\n  },\n  h4: {\n    fontSize: 20,\n    color: colors.text\n  },\n  location: {\n    fontSize: 20,\n    color: colors.text,\n    fontWeight: \"600\"\n  },\n  image: {\n    height: 70,\n    width: 70\n  },\n  times: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  divider: {\n    borderWidth: 1,\n    borderColor: \"#bbb\",\n    marginRight: 20,\n    height: 80\n  }\n});","map":{"version":3,"sources":["D:/Node.Js/React Native/weather/app/components/Report.js"],"names":["React","useContext","colors","Context","Item","Wind","Report","active","loading","error","weatherData","data","undefined","loc","theme","require","current","weather","icon","flex","height","width","opacity","styles","container","location","city","country","image","uri","h3","main","h1","Math","round","tempC","h4","feel","times","Date","sunrise","getHours","getMinutes","divider","sunset","wind_deg","wind_speed","JSON","stringify","dt","hourly","slice","item","index","StyleSheet","create","alignItems","textAlign","justifyContent","fontSize","color","text","fontWeight","flexDirection","borderWidth","borderColor","marginRight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;;;;AAUA,OAAOC,MAAP;AACA,SAASC,OAAT;AACA,OAAOC,IAAP;AACA,OAAOC,IAAP;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAAA,oBACgCL,UAAU,CAACE,OAAD,CAD1C;AAAA,MACRI,MADQ,eACRA,MADQ;AAAA,MACAC,OADA,eACAA,OADA;AAAA,MACSC,KADT,eACSA,KADT;AAAA,MACgBC,WADhB,eACgBA,WADhB;;AAAA,aAEMA,WAAW,CAACH,MAAD,CAAX,GAClBG,WAAW,CAACH,MAAD,CADO,GAElB;AAAEI,IAAAA,IAAI,EAAEC,SAAR;AAAmBC,IAAAA,GAAG,EAAED;AAAxB,GAJY;AAAA,MAERD,IAFQ,QAERA,IAFQ;AAAA,MAEFE,GAFE,QAEFA,GAFE;;AAMhB,MAAIC,KAAK,GAAGC,OAAO,wBAAnB;;AACA,MAAIJ,IAAJ,EAAU;AACRG,IAAAA,KAAK,GACHH,IAAI,CAACK,OAAL,CAAaC,OAAb,CAAqB,CAArB,EAAwBC,IAAxB,CAA6B,CAA7B,KAAmC,GAAnC,GACIH,OAAO,0BADX,GAEIA,OAAO,wBAHb;AAID;;AAED,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AACE,IAAA,MAAM,EAAED,KADV;AAEE,IAAA,KAAK,EAAE;AAAEK,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE,MAAnB;AAA2BC,MAAAA,KAAK,EAAE,MAAlC;AAA0CC,MAAAA,OAAO,EAAE;AAAnD,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGd,OAAO,GACN,oBAAC,iBAAD;AAAmB,IAAA,SAAS,EAAEA,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,IAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADZ,EAGGE,IAAI,IACH,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,GAAG,CAACa,IADP,QACeb,GAAG,CAACc,OADnB,CADF,EAIE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEJ,MAAM,CAACK,KADhB;AAEE,IAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,wCAAsClB,IAAI,CAACK,OAAL,CAAaC,OAAb,CAAqB,CAArB,EAAwBC,IAA9D;AADG,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACO,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBnB,IAAI,CAACK,OAAL,CAAaC,OAAb,CAAqB,CAArB,EAAwBc,IAAjD,CAVF,EAWE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACC,KAAL,CAAWvB,IAAI,CAACK,OAAL,CAAamB,KAAb,GAAqB,GAAhC,CADH,UAXF,EAcE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACa,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACgBH,IAAI,CAACC,KAAL,CAAWvB,IAAI,CAACK,OAAL,CAAaqB,IAAb,GAAoB,GAA/B,CADhB,UAdF,EAiBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACe,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACa,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACW,KADX,EAEG,IAAIG,IAAJ,CAAS5B,IAAI,CAACK,OAAL,CAAawB,OAAb,GAAuB,IAAhC,EAAsCC,QAAtC,EAFH,OAGG,IAAIF,IAAJ,CAAS5B,IAAI,CAACK,OAAL,CAAawB,OAAb,GAAuB,IAAhC,EAAsCE,UAAtC,EAHH,CADF,EAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACoB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,MAAM,CAACa,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACS,KADT,EAEG,IAAIG,IAAJ,CAAS5B,IAAI,CAACK,OAAL,CAAa4B,MAAb,GAAsB,IAA/B,EAAqCH,QAArC,EAFH,OAGG,IAAIF,IAAJ,CAAS5B,IAAI,CAACK,OAAL,CAAa4B,MAAb,GAAsB,IAA/B,EAAqCF,UAArC,EAHH,CAPF,CAjBF,EA8BE,oBAAC,IAAD;AACE,IAAA,GAAG,EAAE/B,IAAI,CAACK,OAAL,CAAa6B,QADpB;AAEE,IAAA,KAAK,EAAElC,IAAI,CAACK,OAAL,CAAa8B,UAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,EAkCE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,IAAI,CAACC,SAAL,CAAe,IAAIT,IAAJ,CAAS5B,IAAI,CAACK,OAAL,CAAaiC,EAAb,GAAkB,IAA3B,CAAf,CAAP,CAlCF,CAJJ,CAPJ,EAkDE,oBAAC,QAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,IAAI,EAAEtC,IAAI,CAACuC,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAFR;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aAAc,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,IAAI,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAA,KAHd;AAIE,IAAA,YAAY,EAAE,sBAACA,IAAD,EAAOC,KAAP;AAAA,aAAiBD,IAAI,GAAGC,KAAxB;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlDF,CADF,CADF;AA6DD;;AAED,eAAe/C,MAAf;AAEA,IAAMiB,MAAM,GAAG+B,UAAU,CAACC,MAAX,CAAkB;AAC/B/B,EAAAA,SAAS,EAAE;AACTL,IAAAA,IAAI,EAAE,CADG;AAETqC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,SAAS,EAAE,QAHF;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTtC,IAAAA,MAAM,EAAE,MALC;AAMTC,IAAAA,KAAK,EAAE;AANE,GADoB;AAU/BW,EAAAA,EAAE,EAAE;AACF2B,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,KAAK,EAAE1D,MAAM,CAAC2D;AAFZ,GAV2B;AAc/B/B,EAAAA,EAAE,EAAE;AACF6B,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,KAAK,EAAE1D,MAAM,CAAC2D;AAFZ,GAd2B;AAkB/BzB,EAAAA,EAAE,EAAE;AACFuB,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,KAAK,EAAE1D,MAAM,CAAC2D;AAFZ,GAlB2B;AAsB/BpC,EAAAA,QAAQ,EAAE;AACRkC,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,KAAK,EAAE1D,MAAM,CAAC2D,IAFN;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GAtBqB;AA2B/BlC,EAAAA,KAAK,EAAE;AACLR,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,KAAK,EAAE;AAFF,GA3BwB;AA+B/BiB,EAAAA,KAAK,EAAE;AACLyB,IAAAA,aAAa,EAAE,KADV;AAELP,IAAAA,UAAU,EAAE;AAFP,GA/BwB;AAmC/Bb,EAAAA,OAAO,EAAE;AACPqB,IAAAA,WAAW,EAAE,CADN;AAEPC,IAAAA,WAAW,EAAE,MAFN;AAGPC,IAAAA,WAAW,EAAE,EAHN;AAIP9C,IAAAA,MAAM,EAAE;AAJD;AAnCsB,CAAlB,CAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  Image,\r\n  ImageBackground,\r\n  ActivityIndicator,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport { Context } from \"../context/Context\";\r\nimport Item from \"./Item\";\r\nimport Wind from \"./Wind\";\r\n\r\nfunction Report() {\r\n  const { active, loading, error, weatherData } = useContext(Context);\r\n  const { data, loc } = weatherData[active]\r\n    ? weatherData[active]\r\n    : { data: undefined, loc: undefined };\r\n\r\n  var theme = require(\"../assets/bg-day.jpg\");\r\n  if (data) {\r\n    theme =\r\n      data.current.weather[0].icon[2] == \"n\"\r\n        ? require(\"../assets/bg-night.jpg\")\r\n        : require(`../assets/bg-day.jpg`);\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <ImageBackground\r\n        source={theme}\r\n        style={{ flex: 1, height: \"100%\", width: \"100%\", opacity: 0.7 }}\r\n      >\r\n        {loading ? (\r\n          <ActivityIndicator animating={loading} />\r\n        ) : (\r\n          <View>\r\n            {error && <Text>No such location!</Text>}\r\n\r\n            {data && (\r\n              <View style={styles.container}>\r\n                <Text style={styles.location}>\r\n                  {loc.city}, {loc.country}\r\n                </Text>\r\n                <Image\r\n                  style={styles.image}\r\n                  source={{\r\n                    uri: `http://openweathermap.org/img/wn/${data.current.weather[0].icon}.png`,\r\n                  }}\r\n                />\r\n                <Text style={styles.h3}>{data.current.weather[0].main}</Text>\r\n                <Text style={styles.h1}>\r\n                  {Math.round(data.current.tempC - 273)}°C\r\n                </Text>\r\n                <Text style={styles.h4}>\r\n                  Feels Like : {Math.round(data.current.feel - 273)}°C\r\n                </Text>\r\n                <View style={styles.times}>\r\n                  <Text style={styles.h4}>\r\n                    Sunrise {\" \\n\"}\r\n                    {new Date(data.current.sunrise * 1000).getHours()}:\r\n                    {new Date(data.current.sunrise * 1000).getMinutes()}\r\n                  </Text>\r\n                  <View style={styles.divider} />\r\n                  <Text style={styles.h4}>\r\n                    Sunset{\" \\n\"}\r\n                    {new Date(data.current.sunset * 1000).getHours()}:\r\n                    {new Date(data.current.sunset * 1000).getMinutes()}\r\n                  </Text>\r\n                </View>\r\n                <Wind\r\n                  deg={data.current.wind_deg}\r\n                  speed={data.current.wind_speed}\r\n                />\r\n                <Text>{JSON.stringify(new Date(data.current.dt * 1000))}</Text>\r\n              </View>\r\n            )}\r\n          </View>\r\n        )}\r\n        <FlatList\r\n          horizontal\r\n          data={data.hourly.slice(0, 4)}\r\n          renderItem={({ item }) => <Item item={item} type=\"hourly\" />}\r\n          keyExtractor={(item, index) => item + index}\r\n        />\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Report;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n\r\n  h1: {\r\n    fontSize: 40,\r\n    color: colors.text,\r\n  },\r\n  h3: {\r\n    fontSize: 30,\r\n    color: colors.text,\r\n  },\r\n  h4: {\r\n    fontSize: 20,\r\n    color: colors.text,\r\n  },\r\n  location: {\r\n    fontSize: 20,\r\n    color: colors.text,\r\n    fontWeight: \"600\",\r\n  },\r\n  image: {\r\n    height: 70,\r\n    width: 70,\r\n  },\r\n  times: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  divider: {\r\n    borderWidth: 1,\r\n    borderColor: \"#bbb\",\r\n    marginRight: 20,\r\n    height: 80,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}