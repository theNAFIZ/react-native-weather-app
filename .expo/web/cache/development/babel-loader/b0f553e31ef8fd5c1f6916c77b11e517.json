{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Node.Js\\\\React Native\\\\weather\\\\app\\\\context\\\\Context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from \"react\";\nimport { createActions } from \"./actions\";\nimport reducer from \"./reducers\";\nvar initialState = {\n  city: \"Dhaka\",\n  coords: {\n    lat: 0,\n    lon: 0\n  },\n  cityData: {},\n  coordsData: {},\n  cityPred: {},\n  coordsPred: {},\n  loading: true,\n  error: false,\n  errors: []\n};\nvar Context = React.createContext();\n\nvar ContextProvider = function ContextProvider(props) {\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var actions = createActions(dispatch);\n  return React.createElement(Context.Provider, {\n    value: _objectSpread({\n      state: state\n    }, actions),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport { Context, ContextProvider };","map":{"version":3,"sources":["D:/Node.Js/React Native/weather/app/context/Context.js"],"names":["React","useReducer","createActions","reducer","initialState","city","coords","lat","lon","cityData","coordsData","cityPred","coordsPred","loading","error","errors","Context","createContext","ContextProvider","props","state","dispatch","actions","children"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT;AACA,OAAOC,OAAP;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,OADa;AAEnBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAFW;AAGnBC,EAAAA,QAAQ,EAAE,EAHS;AAInBC,EAAAA,UAAU,EAAE,EAJO;AAKnBC,EAAAA,QAAQ,EAAE,EALS;AAMnBC,EAAAA,UAAU,EAAE,EANO;AAOnBC,EAAAA,OAAO,EAAE,IAPU;AAQnBC,EAAAA,KAAK,EAAE,KARY;AASnBC,EAAAA,MAAM,EAAE;AATW,CAArB;AAYA,IAAMC,OAAO,GAAGhB,KAAK,CAACiB,aAAN,EAAhB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA,oBACPlB,UAAU,CAACE,OAAD,EAAUC,YAAV,CADH;AAAA;AAAA,MAC1BgB,KAD0B;AAAA,MACnBC,QADmB;;AAEjC,MAAMC,OAAO,GAAGpB,aAAa,CAACmB,QAAD,CAA7B;AACA,SACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK;AAAID,MAAAA,KAAK,EAALA;AAAJ,OAAcE,OAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,QADT,CADF;AAKD,CARD;;AAUA,SAASP,OAAT,EAAkBE,eAAlB","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport { createActions } from \"./actions\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst initialState = {\r\n  city: \"Dhaka\",\r\n  coords: { lat: 0, lon: 0 },\r\n  cityData: {},\r\n  coordsData: {},\r\n  cityPred: {},\r\n  coordsPred: {},\r\n  loading: true,\r\n  error: false,\r\n  errors: [],\r\n};\r\n\r\nconst Context = React.createContext();\r\n\r\nconst ContextProvider = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const actions = createActions(dispatch);\r\n  return (\r\n    <Context.Provider value={{ state, ...actions }}>\r\n      {props.children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport { Context, ContextProvider };\r\n"]},"metadata":{},"sourceType":"module"}