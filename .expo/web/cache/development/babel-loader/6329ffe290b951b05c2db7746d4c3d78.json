{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport settings from \"../config/settings\";\n\nvar storeItems = function storeItems(item) {\n  return _regeneratorRuntime.async(function storeItems$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(settings.storageKey + item.loc.city, JSON.stringify(item)));\n\n        case 3:\n          _context.next = 8;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nvar getItems = function getItems(loc) {\n  var res;\n  return _regeneratorRuntime.async(function getItems$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(settings.storageKey + loc));\n\n        case 3:\n          res = _context2.sent;\n          console.log(res);\n\n          if (!res) {\n            _context2.next = 11;\n            break;\n          }\n\n          res = JSON.parse(res);\n          res = checkValidity(res);\n          return _context2.abrupt(\"return\", formatResponse(res.data));\n\n        case 11:\n          return _context2.abrupt(\"return\");\n\n        case 12:\n          _context2.next = 17;\n          break;\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 14]], Promise);\n};\n\nvar removeItem = function removeItem(loc) {\n  return _regeneratorRuntime.async(function removeItem$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(settings.storageKey + loc));\n\n        case 3:\n          _context3.next = 8;\n          break;\n\n        case 5:\n          _context3.prev = 5;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nvar checkValidity = function checkValidity(item) {\n  var now = new Date();\n  var ts = Date(item.data.current.dt);\n\n  if (Math.abs(ts - now) > 7 * 24 * 60 * 60 * 1000) {\n      removeItem(item.loc);\n      return null;\n    } else {\n    return item;\n  }\n};\n\nvar formatResponse = function formatResponse(data) {\n  var formatted = data;\n  console.log(data);\n  var now = new Date();\n  formatted.hourly = data.hourly.filter(function (item) {\n    return new Date(item.dt * 1000) > now;\n  });\n  formatted.daily = data.daily.filter(function (item) {\n    return new Date(item.dt * 1000 - 12 * 60 * 60 * 1000) > now;\n  });\n  formatted.current = {\n    dt: formatted.hourly[0].dt,\n    sunrise: formatted.daily[0].sunrise,\n    sunset: formatted.daily[0].sunset,\n    tempC: formatted.hourly[0].temp,\n    humidity: formatted.hourly[0].humidity,\n    tempMin: formatted.daily[0].temp.min,\n    tempMax: formatted.daily[0].temp.max,\n    feel: formatted.hourly[0].feels_like,\n    wind_speed: formatted.hourly[0].wind_speed,\n    wind_deg: formatted.hourly[0].wind_deg,\n    weather: formatted.hourly[0].weather\n  };\n  return formatted;\n};\n\nexport default {\n  storeItems: storeItems,\n  getItems: getItems,\n  formatResponse: formatResponse\n};","map":{"version":3,"sources":["D:/Node.Js/React Native/weather/app/api/storage.js"],"names":["AsyncStorage","settings","storeItems","item","setItem","storageKey","loc","city","JSON","stringify","console","log","getItems","getItem","res","parse","checkValidity","formatResponse","data","removeItem","now","Date","ts","current","dt","Math","abs","formatted","hourly","filter","daily","sunrise","sunset","tempC","temp","humidity","tempMin","min","tempMax","max","feel","feels_like","wind_speed","wind_deg","weather"],"mappings":"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","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport settings from \"../config/settings\";\r\n\r\nconst storeItems = async (item) => {\r\n  try {\r\n    await AsyncStorage.setItem(\r\n      settings.storageKey + item.loc.city,\r\n      JSON.stringify(item)\r\n    );\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst getItems = async (loc) => {\r\n  try {\r\n    var res = await AsyncStorage.getItem(settings.storageKey + loc);\r\n    console.log(res);\r\n    if (res) {\r\n      res = JSON.parse(res);\r\n      res = checkValidity(res);\r\n      return formatResponse(res.data);\r\n    } else return;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst removeItem = async (loc) => {\r\n  try {\r\n    await AsyncStorage.removeItem(settings.storageKey + loc);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst checkValidity = (item) => {\r\n  const now = new Date();\r\n  var ts = Date(item.data.current.dt);\r\n  if (\r\n    Math.abs(ts - now) >\r\n    7 * 24 * 60 * 60 * 1000 /* Time Difference: 7 days */\r\n  ) {\r\n    removeItem(item.loc);\r\n    return null;\r\n  } else {\r\n    return item;\r\n  }\r\n};\r\n\r\nconst formatResponse = (data) => {\r\n  var formatted = data;\r\n  console.log(data);\r\n  const now = new Date();\r\n\r\n  // Current\r\n  // // Date\r\n  // if (now.getDate() != ts.getDate()) {\r\n  //   let d = Math.abs(ts.getDate() - now.getDate()) % 7;\r\n  //   formatted.current = data.daily[d];\r\n  // }\r\n  // // Hour\r\n  // if (Math.abs(ts - now) < 48 * 60 * 60 * 1000) {\r\n  //   for (\r\n  //     var i = 0;\r\n  //     Math.abs(ts - now) > 60 * 60 * 1000 && i < 48 /* 1 hour */;\r\n  //     i++\r\n  //   ) {\r\n  //     ts = new Date(data.houtly[i].dt * 1000);\r\n  //     if (Math.abs(ts - now) < 60 * 60 * 1000) {\r\n  //       //temp, wind_speed, wind_deg, weather[] copy\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  // Next Hours\r\n  formatted.hourly = data.hourly.filter(\r\n    (item) => new Date(item.dt * 1000) > now\r\n  );\r\n  // Next Days //Extra 12 hour taken\r\n  formatted.daily = data.daily.filter(\r\n    (item) => new Date(item.dt * 1000 - 12 * 60 * 60 * 1000) > now\r\n  );\r\n  // Current\r\n  formatted.current = {\r\n    dt: formatted.hourly[0].dt,\r\n    sunrise: formatted.daily[0].sunrise,\r\n    sunset: formatted.daily[0].sunset,\r\n    tempC: formatted.hourly[0].temp,\r\n    humidity: formatted.hourly[0].humidity,\r\n    tempMin: formatted.daily[0].temp.min,\r\n    tempMax: formatted.daily[0].temp.max,\r\n    feel: formatted.hourly[0].feels_like,\r\n    wind_speed: formatted.hourly[0].wind_speed,\r\n    wind_deg: formatted.hourly[0].wind_deg,\r\n    weather: formatted.hourly[0].weather,\r\n  };\r\n  return formatted;\r\n};\r\nexport default { storeItems, getItems, formatResponse };\r\n"]},"metadata":{},"sourceType":"module"}