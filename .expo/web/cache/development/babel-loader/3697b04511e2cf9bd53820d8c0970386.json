{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node.Js\\\\React Native\\\\weather\\\\app\\\\components\\\\Report.js\";\nimport React, { useContext, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport colors from \"../config/colors\";\nimport { Context } from \"../context/Context\";\nimport Wind from \"./Wind\";\nvar sunrise, sunset;\n\nfunction Report() {\n  var _useContext = useContext(Context),\n      loading = _useContext.loading,\n      error = _useContext.error,\n      cityData = _useContext.cityData;\n\n  var formatTime = function formatTime() {\n    if (cityData.sys) {\n      sunrise = new Date(cityData.sys.sunrise * 1000).getHours();\n      sunset = new Date(cityData.sys.sunset * 1000).getHours();\n    }\n\n    return;\n  };\n\n  useEffect(function () {\n    formatTime();\n    console.log(typ);\n  }, [cityData]);\n  return React.createElement(React.Fragment, null, loading ? React.createElement(ActivityIndicator, {\n    animating: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }) : React.createElement(React.Fragment, null, error && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"No such location!\"), cityData && sunrise && sunset && React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, cityData.name, \", \", cityData.sys.country), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, i++), React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: \"http://openweathermap.org/img/wn/\" + cityData.weather[0].icon + \".png\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.h3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, cityData.weather[0].description), React.createElement(Text, {\n    style: styles.h1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, Math.round(cityData.main.temp - 273), \"\\xB0C\"), React.createElement(Text, {\n    style: styles.h3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"Sunrise \", \" \\n\", sunrise), React.createElement(Text, {\n    style: styles.h3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Sunset\", \" \\n\", sunset), React.createElement(Wind, {\n    deg: cityData.wind.deg,\n    speed: cityData.wind.speed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }))));\n}\n\nexport default Report;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: colors.dark,\n    height: \"100%\",\n    width: \"100%\"\n  },\n  h1: {\n    fontSize: 60,\n    color: colors.text\n  },\n  h3: {\n    fontSize: 40,\n    color: colors.text\n  },\n  location: {\n    fontSize: 40,\n    color: colors.text,\n    fontWeight: \"600\"\n  },\n  image: {\n    height: 90,\n    width: 90\n  }\n});","map":{"version":3,"sources":["D:/Node.Js/React Native/weather/app/components/Report.js"],"names":["React","useContext","useEffect","colors","Context","Wind","sunrise","sunset","Report","loading","error","cityData","formatTime","sys","Date","getHours","console","log","typ","styles","container","location","name","country","i","image","uri","weather","icon","h3","description","h1","Math","round","main","temp","wind","deg","speed","StyleSheet","create","alignItems","justifyContent","backgroundColor","dark","height","width","fontSize","color","text","fontWeight"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { StyleSheet, View, Text, Image, ActivityIndicator } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport { Context } from \"../context/Context\";\r\nimport Wind from \"./Wind\";\r\n\r\nlet sunrise, sunset;\r\nfunction Report() {\r\n  const { loading, error, cityData } = useContext(Context);\r\n  const formatTime = () => {\r\n    if (cityData.sys) {\r\n      sunrise = new Date(cityData.sys.sunrise * 1000).getHours();\r\n      sunset = new Date(cityData.sys.sunset * 1000).getHours();\r\n    }\r\n    return;\r\n  };\r\n  useEffect(() => {\r\n    formatTime();\r\n    console.log(typ);\r\n  }, [cityData]);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <ActivityIndicator animating={loading} />\r\n      ) : (\r\n        <>\r\n          {error && <Text>No such location!</Text>}\r\n\r\n          {cityData && sunrise && sunset && (\r\n            <View style={styles.container}>\r\n              <Text style={styles.location}>\r\n                {cityData.name}, {cityData.sys.country}\r\n              </Text>\r\n              <Text>{i++}</Text>\r\n              <Image\r\n                style={styles.image}\r\n                source={{\r\n                  uri: `http://openweathermap.org/img/wn/${cityData.weather[0].icon}.png`,\r\n                }}\r\n              />\r\n              <Text style={styles.h3}>{cityData.weather[0].description}</Text>\r\n              <Text style={styles.h1}>\r\n                {Math.round(cityData.main.temp - 273)}Â°C\r\n              </Text>\r\n\r\n              <Text style={styles.h3}>\r\n                Sunrise {\" \\n\"}\r\n                {sunrise}\r\n              </Text>\r\n\r\n              <Text style={styles.h3}>\r\n                Sunset{\" \\n\"}\r\n                {sunset}\r\n              </Text>\r\n\r\n              <Wind deg={cityData.wind.deg} speed={cityData.wind.speed} />\r\n            </View>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Report;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: colors.dark,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  h1: {\r\n    fontSize: 60,\r\n    color: colors.text,\r\n  },\r\n  h3: {\r\n    fontSize: 40,\r\n    color: colors.text,\r\n  },\r\n  location: {\r\n    fontSize: 40,\r\n    color: colors.text,\r\n    fontWeight: \"600\",\r\n  },\r\n  image: {\r\n    height: 90,\r\n    width: 90,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}